#Cwiczenie 4. Napisz lambdę, która wyszukuje imię studenta o drugim najniższym wyniku z listy w postaci:
# [['student1', wynik1], ['student2', wynik2], ....]
'''
our_list = [['Ania',2], ['Michal',3], ['Romek',3], ['Tysia', 1]]
our_list.sort(key = lambda x: x[1])
print(our_list[1][0])
'''
#Cwiczenie 4. Napisz funkcję, która przyjmuje listę kodów genetycznych i zwraca te, w których na pewno zaszła delecja.
# Przykładowo: KodonyZDelecja(["ATCGGGCAT", "ATCGA", "TTTGCGA"]) == (["ATCGA", "TTTGCGA"]
'''
def fun_div_by_3(sequence):
    if len(sequence) % 3 != 0:
        return sequence
seq_list = ["ATCGGGCAT", "ATCGA", "TTTGCGA"]
count_list = list(map(fun_div_by_3, seq_list))
final_list = list(filter(lambda a: a is not None, count_list))
print(final_list)
'''
#Cwiczenie 4. Dany jest string, w którym znajduą się sekwencje nukleotydowe. W 2 linijkach kodu, zapisz każdą sekwencję
# jako kolejny element listy i posortuj je wg liczby uracyli (od sekwencji zawierającej najwięcej, do tej najmniej). Uwaga: warto wrócić do ćwiczeń 2.
'''
s = "UGAGGUAGUAGGUUUUUUUUUU, UGAGGUAGUAGGUUGAUUUUUU, UGAGGUAGUAGGUUGUUUUUUU, UGAGGUAGUAGGUUGUGAUUUU, UGAGGUAGUAGGUUGUAUGGUU"
our_list = s.split(sep=', ')
our_list.sort(reverse=True, key=lambda a: a.count('U'))
print(our_list)
'''